{"version":3,"file":"js/6307.dfc54650.js","mappings":"8KAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,IAAI,CAACF,EAAIK,GAAG,6FAA6FH,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,MAAM,QAAUN,EAAIO,QAAQ,MAAQP,EAAIQ,OAAOC,GAAG,CAAC,MAAQT,EAAIU,WAAW,EACjU,EACIC,EAAkB,G,WCQtB,SACAC,KAAA,YACAC,WAAA,CACAC,UAAAA,EAAAA,YAEAC,MAAA,CACAP,MAAA,CACAQ,KAAAC,OACAC,QAAA,MAEAX,QAAA,CACAS,KAAAG,MACAD,QAAA,OAGAE,QAAA,CACAV,MAAAA,CAAAW,GACA,KAAAC,MAAA,QAAAD,EACA,IC5B0Q,I,eCOtQE,GAAY,OACd,EACAxB,EACAY,GACA,EACA,KACA,KACA,MAIF,QAAeY,E,uDClBf,IAAIxB,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAAEJ,EAAIwB,OAAQ,CAACtB,EAAG,cAAc,CAACuB,IAAIzB,EAAIgB,KAAKU,IAAI,cAAcpB,MAAM,CAAC,MAAQ,QAAQ,WAAW,KAAK,SAAWN,EAAI2B,SAAS,QAAU3B,EAAI4B,cAAc,YAAa,EAAM,eAAiB5B,EAAI6B,UAAU,UAAY7B,EAAI8B,SAAS,cAAgB9B,EAAI+B,cAAc,SAAW/B,EAAIgC,SAAS,eAAiBhC,EAAIiC,eAAe,cAAgBjC,EAAIkC,eAAezB,GAAG,CAAC,IAAMT,EAAImC,UAAUC,MAAM,CAAC5B,MAAOR,EAAIqC,SAAUC,SAAS,SAAUC,GAAMvC,EAAIqC,SAASE,CAAG,EAAEC,WAAW,cAAexC,EAAIyC,YAAavC,EAAG,SAAS,CAACI,MAAM,CAAC,KAAO,SAAS,MAAQ,WAAWG,GAAG,CAAC,MAAQ,SAASiC,GAAQ,OAAO1C,EAAIsB,MAAM,YAAY,IAAI,CAACpB,EAAG,IAAI,CAACE,YAAY,kBAAkBJ,EAAI2C,MAAMzC,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,IAAI,CAACE,YAAY,2BAA2BJ,EAAIK,GAAG,0BAA0B,EACt3B,EACIM,EAAkB,G,2DCYtB,SACAC,KAAA,YACAC,WAAA,CACA+B,YAAAA,KAEA7B,MAAA,CACAP,MAAA,GACAQ,KAAA,CACAA,KAAAC,OACAC,QAAA,IAEAY,SAAA,CACAd,KAAA6B,QACA3B,SAAA,GAEAX,QAAA,CACAS,KAAA,CAAAG,MAAA2B,SAEAC,OAAA,CACA/B,KAAA8B,QAEAE,QAAA,GACAC,aAAA,CACAjC,KAAAkC,SACAhC,QAAA,MAEAgB,cAAA,CACAlB,KAAAC,OACAC,QAAA,SAGAiC,SAAA,CACAvB,aAAAA,GACA,IAAAwB,EAAA,GACA,YAAApC,MACA,gBACA,IAAAqC,EAAA,KAAAC,OAAAF,MAAAG,YAAAC,KAAAC,GAAAA,EAAAC,IAAA,KAAAV,SACA,GAAAW,EAAAA,EAAAC,SAAAP,GAAA,CACA,IACAD,EAAAC,EAAAQ,UAAA,SAAAC,IAAAC,GAAAA,EAAAnD,KACA,OAAAoD,GAAA,CACA,OAAAZ,EAAAa,QAAAN,EAAAA,EAAAC,SAAAP,EAAA,oBACA,IACA,IAAAa,EAAApB,OAAAqB,OAAAd,EAAA,oBAAAG,KAAAY,GAAA,UAAAA,EAAApD,MACAkD,GAAA/C,MAAAkD,QAAAH,EAAAC,UACAf,EAAAc,EAAAC,OAEA,OAAAH,GAAA,CAEA,CACA,MACA,oBACAZ,EAAA,KAAAE,OAAAF,MAAAG,YACA,MACA,aACAH,EAAA,KAAAE,OAAAF,MAAAkB,KAAAA,KACA,MACA,gBACA,iBACAlB,EAAA,KAAAE,OAAAF,MAAAmB,MAAAA,MACA,MACA,gBACAnB,EAAA,KAAAE,OAAAF,MAAAoB,OAAAC,UACA,MACA,mBACArB,EAAA,KAAAE,OAAAF,MAAAsB,YAAAC,gBACA,MACA,sBACA,IAAAC,EAAAC,EAAA,OACAC,EAAA,GACA,QAAAC,KAAAH,EAAAI,aACAF,EAAAC,GAAA,CAAA/D,KAAA+D,GAEA3B,EAAAN,OAAAmC,OAAAH,EAAAF,EAAAM,WACA,MACA,oBACA9B,EAAA,KAAAE,OAAAF,MAAAsB,YAAAS,iBACA,MACA,mBACA/B,EAAA,KAAAE,OAAAF,MAAAgC,aACA,MACA,mBACAhC,EAAA,KAAAE,OAAAF,MAAAiC,WAAAC,eAAAC,YACA,MACA,kBACAnC,EAAAN,OAAA0C,KAAA,KAAAlC,OAAAF,MAAAqC,aACA,MACA,0BACArC,EAAA,KAAAJ,WAAA,KAAAM,OAAAF,MAAAqC,YAAA3C,OAAA0C,KAAA,KAAAlC,OAAAF,MAAAqC,YAAA,KAAAzC,SAAA0C,UAAA,GACA,MACA,QACAtC,EAAA,KAAA7C,QAGA,yBAAA0C,cAAAG,GAAA,kBAAAA,IAEAA,EADAO,EAAAA,EAAAC,SAAAR,GACAN,OAAA6C,YAAA7C,OAAA8C,QAAAxC,GAAAyC,OAAA,EAAApE,EAAAjB,KAAA,KAAAyC,aAAAzC,EAAAiB,KAGA2B,EAAAyC,OAAA,CAAArF,EAAAiB,IAAA,KAAAwB,aAAAzC,EAAAiB,KAIA,IAAAqE,EAAA,GACA,YAAA9E,MACA,oBACA,OAAAoC,EAAAU,IAAAL,GAAA,KAAAsC,EAAAtC,EAAAC,KAAAsC,KAAA,KAAAC,aACA,UACA,UAAAvC,KAAAN,EAAA,CACA,IAAA8C,EAAAxC,EAAAyC,QAAA,sCACAC,EAAAF,EAAAG,MAAA,sBACA,GAAAD,EAAA,CACA,IAAAE,EAAAC,OAAAC,SAAAJ,EAAA,OACAE,KAAA,KAAAhD,OAAAF,MAAAoB,OAAAC,YACAyB,EAAA,KAAA5C,OAAAF,MAAAoB,OAAAC,UAAA6B,GAAA,UAAAA,KAEA,CACA,IAAAG,EAAAP,EAAAG,MAAA,yBACAI,IACAP,EAAAO,EAAA,QAAA/C,MAEAoC,EAAAY,KAAA,CAAAhD,KAAAwC,SACA,CACA,OAAAJ,EACA,aACA,OAAA1C,EAAAU,IAAA6C,IAAA,CACAjD,GAAAiD,EAAAjD,GACAwC,MAAAvC,EAAAA,EAAAiD,iBAAAD,MACAX,KAAA,KAAAC,aACA,sBACA,QAAAjF,KAAAoC,EAAA,CACA,IAAAL,EAAAK,EAAApC,GACA8E,EAAAY,KAAA,CACAhD,GAAA1C,EACAkF,MAAAnD,EAAA8D,OAAAlD,EAAAA,EAAAmD,eAAA9F,GACAR,MAAAuC,GAEA,CACA,OAAA+C,EACA,gBACA,iBACA,OAAA1C,EAAAU,IAAAiD,GAAA,KAAAhB,EAAAgB,EAAAC,OAAAhB,KAAA,CAAAiB,EAAAC,IAAAvD,EAAAA,EAAAwD,WAAAF,EAAAvD,GAAAwD,EAAAxD,KACA,gBACA,QAAAjC,KAAA2B,EACA0C,EAAAY,KAAA,CACAhD,GAAA6C,OAAAC,SAAA/E,EAAA,IACAyE,MAAAzE,EAAA,KAAA2B,EAAA3B,KAGA,OAAAqE,EACA,mBACA,oBACA,mBACA,QAAArE,KAAA2B,EAAA,CACA,IAAAM,EAAAjC,EAAA2F,cAEAlB,EAAA9C,EAAA3B,GAAAoF,MAEAX,EAIAxC,IAAAwC,EAAAkB,gBACAlB,EAAA,GAAAA,OAAAxC,KAJAwC,EAAAxC,EAMAoC,EAAAY,KAAA,CAAAhD,KAAAwC,SACA,CACA,OAAAJ,EAAAE,KAAA,KAAAC,aACA,mBACA,OAAA7C,EAAAU,IAAAuD,IAAA,CACA3D,GAAA2D,EAAAzG,KACAsF,MAAAmB,EAAAzG,MAAAyG,EAAAC,KAAA,wBAEA,WACA,IAAAC,GAAA,IAAAC,MAAAC,cACAC,EAAAvG,MAAAwG,KAAA,CAAA1D,OAAA,MAAA2D,EAAAC,IAAA,KAAA9B,EAAA9E,OAAAsG,EAAAM,KAEA,0BAAArH,OAAA,KAAAA,MAAAyD,OAAA,QAAAyD,EAAAI,UAAAC,GAAAA,EAAArE,KAAA,KAAAlD,OAAA,CACA,IAAAwH,EAAA,KAAAjC,EAAA,KAAAvF,OACA,KAAAA,MAAA+G,EACAG,EAAAO,QAAAD,GAGAN,EAAAhB,KAAA,KAAAX,EAAA,KAAAvF,OAEA,CACA,OAAAkH,EACA,gBACA,kBACA,0BACA,OAAAtE,EAAAU,IAAAoE,GAAA,KAAAnC,EAAAmC,IACA,QACA,OAAAvE,EAAAA,EAAAC,SAAA,KAAAb,SAAA,KAAAA,OAAAoF,SACA,KAAApF,OAAAqF,iBAAAtE,IAAAoE,GAAA,KAAAnC,EAAAmC,IAEA/G,MAAAkD,QAAA,KAAA9D,SACA,KAAAA,QAAAuD,IAAAoE,GACAvE,EAAAA,EAAAC,SAAAsE,GACAA,EAGA,KAAAnC,EAAAmC,IAKA,GAGA,EACAzF,WAAAA,GACA,6BAAAzB,IACA,EACAe,aAAAA,GACA,YAAAJ,SAAA,0BACA,EACAM,cAAAA,GACA,oBAAAjB,KAAA,qDACA,EACAW,QAAAA,GACA,0BAAAX,IACA,EACAgB,QAAAA,GACA,IAAAqG,EAAA,sEACA,oBAAArH,MAAA,SAAAY,cAAAqC,QAAAoE,EAAAC,SAAA,KAAAtH,KACA,EACAa,SAAAA,GACA,YAAAF,UACAR,MAAAkD,QAAA,KAAAhC,WAAA,SAAAA,SAAA4B,OAGA,YAAA5B,QAEA,GAEAyD,IAAAA,GACA,OACAzD,SAAA,KACAb,QAAA,EAEA,EACA+G,OAAAA,GACA,KAAAC,UACA,EACAC,MAAA,CACAzH,IAAAA,GACA,KAAAwH,UACA,EACAnG,QAAAA,CAAAqG,GACA,IAAAlI,EACA,UAAAkI,EACAlI,EAAA,UAEA,QAAAmB,SACAR,MAAAkD,QAAAqE,KACAA,EAAA,CAAAA,IAEAlI,EAAAkI,EAAA5E,IAAA6E,GAAAA,EAAAjF,SAGA,YAAA1C,MACA,gBACA,IAAA4H,EAAArC,OAAAC,SAAAkC,EAAAhF,IACAlD,EAAA+F,OAAAsC,MAAAD,GAAA,KAAAA,EACA,MACA,sBACApI,EAAAkI,EAAAlI,MACA,MACA,WACAA,EAAAS,OAAAyH,EAAAhF,IACA,MACA,QACAlD,EAAAkI,EAAAhF,GAGA,KAAApC,MAAA,QAAAd,EACA,EACAwC,OAAAA,GACA,YAAAhC,MACA,kBACA,0BACA,KAAAqB,SAAA,KACA,KAAAyG,iBACA,MACA,gBACA,KAAAzG,SAAA,KACA,KAAAmG,WACA,MAEA,GAEApH,QAAA,IACAuC,EAAAA,EAAAoF,WAAA,2BACApF,EAAAA,EAAAoF,WAAA,4BAEAhD,CAAAA,CAAAmC,GACA,OACAxE,GAAAwE,EACAhC,MAAAgC,EAEA,EACA,cAAAM,GACA,KAAAhH,QAAA,EACA,mBAAAR,MAAA,aAAAA,WACA,KAAAgI,gBAEA,mBAAAhI,YACA,KAAAiI,mBAAA,KAAAjG,SAEA,KAAAkG,gBACA,KAAA1H,QAAA,CACA,EACA,oBAAAsH,SACA,KAAAK,YAEA,IAAAC,EAAA,KAAAC,MAAAC,YAEAF,EAAAN,gBAAA3H,MAAAkD,QAAA+E,EAAAG,kBAAAH,EAAAG,gBAAAtF,QACAmF,EAAAI,OAAAJ,EAAAG,gBAAA,GAEA,EACAL,aAAAA,GACA,IAAA1I,EAAA,0BAAAA,MAAA,KAAAuC,OAAA7B,UAAA,KAAAV,MACA,QAAAmB,UAAAR,MAAAkD,QAAA7D,GACA,KAAA6B,SAAA,KAAAT,cAAAiE,OAAA4D,GAAAjJ,EAAA8H,SAAAmB,EAAA/F,SAEA,CACA,YAAA1C,MACA,mBACA,oBACA,mBACA,kBAAAR,IACAA,EAAAA,EAAA4G,eAEA,MAEA,IAAAsC,EAAA,KAAA9H,cAAA4B,KAAAiG,GAAAA,EAAA/F,KAAAlD,QACAmJ,IAAAD,IACA,KAAArH,SAAAqH,EAEA,CACA,EACAzD,WAAAA,CAAAgB,EAAAC,GACA,OAAAvD,EAAAA,EAAAiG,6BAAA3C,EAAAf,MAAAgB,EAAAhB,MACA,EACA/D,QAAAA,CAAA3B,GACA,KAAA6B,SAAA,KAAA0D,EAAAvF,EACA,ICzWiQ,I,eCS7Pe,GAAY,OACd,EACAxB,EACAY,GACA,EACA,KACA,KACA,MAIF,QAAeY,E,0FCnBR,MAAM2D,EAAYvB,EAAAA,EAAMkG,gBAAgBhF,EAAQ,QAAyDiF,YACnG9E,EAAe,CAC3B,SACA,UACA,SACA,UACA,QACA,S","sources":["webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseCrs.vue","webpack://@openeo/web-editor/src/components/wizards/tabs/ChooseCrs.vue","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseCrs.vue?4760","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseCrs.vue?e013","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?ff2a","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?8dc4","webpack://@openeo/web-editor/./src/components/datatypes/api.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"step choose-crs\"},[_c('p',[_vm._v(\"Please select the coordinate reference system (CRS) you want to data be reprojected to.\")]),_c('SelectBox',{attrs:{\"type\":\"crs\",\"options\":_vm.options,\"value\":_vm.value},on:{\"input\":_vm.setCrs}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"step choose-crs\">\n\t\t<p>Please select the coordinate reference system (CRS) you want to data be reprojected to.</p>\n\t\t<SelectBox type=\"crs\" :options=\"options\" :value=\"value\" @input=\"setCrs\" />\n\t</div>\n</template>\n\n<script>\nimport SelectBox from '../../datatypes/SelectBox.vue';\n\nexport default {\n\tname: 'ChooseCrs',\n\tcomponents: {\n\t\tSelectBox\n\t},\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefault: null\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tmethods: {\n\t\tsetCrs(crs) {\n\t\t\tthis.$emit('input', crs);\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseCrs.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseCrs.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ChooseCrs.vue?vue&type=template&id=cad09f08\"\nimport script from \"./ChooseCrs.vue?vue&type=script&lang=js\"\nexport * from \"./ChooseCrs.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"select-container\"},[(_vm.loaded)?[_c('MultiSelect',{key:_vm.type,ref:\"htmlElement\",attrs:{\"label\":\"label\",\"track-by\":\"id\",\"multiple\":_vm.multiple,\"options\":_vm.selectOptions,\"allowEmpty\":false,\"preselectFirst\":_vm.preselect,\"disabled\":!_vm.editable,\"deselectLabel\":_vm.deselectLabel,\"taggable\":_vm.taggable,\"tagPlaceholder\":_vm.tagPlaceholder,\"openDirection\":_vm.openDirection},on:{\"tag\":_vm.addValue},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),(_vm.showDetails)?_c('button',{attrs:{\"type\":\"button\",\"title\":\"Details\"},on:{\"click\":function($event){return _vm.$emit('onDetails')}}},[_c('i',{staticClass:\"fas fa-info\"})]):_vm._e()]:_c('div',{staticClass:\"loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_vm._v(\" Loading options...\")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"select-container\">\n\t\t<template v-if=\"loaded\">\n\t\t\t<MultiSelect v-model=\"selected\" :key=\"type\" ref=\"htmlElement\" label=\"label\" track-by=\"id\" :multiple=\"multiple\" :options=\"selectOptions\" :allowEmpty=\"false\" :preselectFirst=\"preselect\" :disabled=\"!editable\" :deselectLabel=\"deselectLabel\" :taggable=\"taggable\" :tagPlaceholder=\"tagPlaceholder\" :openDirection=\"openDirection\" @tag=\"addValue\"></MultiSelect>\n\t\t\t<button v-if=\"showDetails\" type=\"button\" title=\"Details\" @click=\"$emit('onDetails')\"><i class=\"fas fa-info\"></i></button>\n\t\t</template>\n\t\t<div class=\"loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i> Loading options...</div>\n\t</div>\n</template>\n\n<script>\nimport MultiSelect from 'vue-multiselect'\nimport Utils from '../../utils';\n\nexport default {\n\tname: 'SelectBox',\n\tcomponents: {\n\t\tMultiSelect\n\t},\n\tprops: {\n\t\tvalue: {},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: \"\"\n\t\t},\n\t\teditable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\toptions: {\n\t\t\ttype: [Array, Object]\n\t\t},\n\t\tschema: {\n\t\t\ttype: Object\n\t\t},\n\t\tcontext: {},\n\t\toptionFilter: {\n\t\t\ttype: Function,\n\t\t\tdefault: null\n\t\t},\n\t\topenDirection: {\n\t\t\ttype: String,\n\t\t\tdefault: 'auto'\n\t\t}\n\t},\n\tcomputed: {\n\t\tselectOptions() {\n\t\t\tlet state = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tlet collection = this.$store.state.collections.find(c => c.id == this.context);\n\t\t\t\t\tif (Utils.isObject(collection)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstate = collection.summaries['bands'].map(band => band.name);\n\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\tif (state.length === 0 && Utils.isObject(collection['cube:dimensions'])) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlet bandDimension = Object.values(collection['cube:dimensions']).find(d => d.type === 'bands');\n\t\t\t\t\t\t\t\tif (bandDimension && Array.isArray(bandDimension.values)) {\n\t\t\t\t\t\t\t\t\tstate = bandDimension.values;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\tstate = this.$store.state.collections;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'job-id':\n\t\t\t\t\tstate = this.$store.state.jobs.jobs;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\tstate = this.$store.state.files.files;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tstate = this.$store.state.editor.epsgCodes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'input-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getInputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tlet t = require('./api');\n\t\t\t\t\tlet types = {};\n\t\t\t\t\tfor(let native of t.NATIVE_TYPES) {\n\t\t\t\t\t\ttypes[native] = {type: native}\n\t\t\t\t\t}\n\t\t\t\t\tstate = Object.assign(types, t.API_TYPES);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getOutputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tstate = this.$store.state.serviceTypes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\tstate = this.$store.state.connection.capabilities().listPlans();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\t\tstate = Object.keys(this.$store.state.udfRuntimes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tstate = this.context in this.$store.state.udfRuntimes ? Object.keys(this.$store.state.udfRuntimes[this.context].versions) : [];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tstate = this.options;\n\t\t\t}\n\n\t\t\tif (typeof this.optionFilter === 'function' && state && typeof state === 'object') {\n\t\t\t\tif (Utils.isObject(state)) {\n\t\t\t\t\tstate = Object.fromEntries(Object.entries(state).filter(([key, value]) => this.optionFilter(value, key)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstate = state.filter((value, key) => this.optionFilter(value, key));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet data = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\treturn state.map(c => this.e(c.id)).sort(this.sortByLabel);\n\t\t\t\tcase 'crs':\n\t\t\t\t\tfor(const id of state) {\n\t\t\t\t\t\tlet label = id.replace('http://www.opengis.net/def/crs/', '');\n\t\t\t\t\t\tlet epsg = label.match(/^EPSG\\/\\d+\\/(\\d+)/i);\n\t\t\t\t\t\tif (epsg) {\n\t\t\t\t\t\t\tlet code = Number.parseInt(epsg[1], 10);\n\t\t\t\t\t\t\tif (code in this.$store.state.editor.epsgCodes) {\n\t\t\t\t\t\t\t\tlabel = this.$store.state.editor.epsgCodes[code] + ` (EPSG:${code})`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet ogc = label.match(/^OGC\\/([^\\/]+)\\/(.+)/i);\n\t\t\t\t\t\tif (ogc) {\n\t\t\t\t\t\t\tlabel = ogc[2] + ` (${id})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.push({ id, label });\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'job-id':\n\t\t\t\t\treturn state.map(j => ({\n\t\t\t\t\t\tid: j.id,\n\t\t\t\t\t\tlabel: Utils.getResourceTitle(j)\n\t\t\t\t\t})).sort(this.sortByLabel);\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tfor(let type in state) {\n\t\t\t\t\t\tlet schema = state[type];\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: type,\n\t\t\t\t\t\t\tlabel: schema.title || Utils.prettifyString(type),\n\t\t\t\t\t\t\tvalue: schema\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\treturn state.map(f => this.e(f.path)).sort((a, b) => Utils.sortByPath(a.id, b.id));\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: Number.parseInt(key, 10),\n\t\t\t\t\t\t\tlabel: key + \": \" + state[key]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'input-format':\n\t\t\t\tcase 'output-format':\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tlet id = key.toUpperCase(); // uppercase mostly for services\n\t\t\t\t\t\t// show title if available...\n\t\t\t\t\t\tlet label = state[key].title;\n\t\t\t\t\t\t// otherwise upper-cased key...\n\t\t\t\t\t\tif (!label) {\n\t\t\t\t\t\t\tlabel = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// and if title is different from key, also show key\n\t\t\t\t\t\telse if (id !== label.toUpperCase()) {\n\t\t\t\t\t\t\tlabel = `${label} - ${id}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.push({id, label});\n\t\t\t\t\t}\n\t\t\t\t\treturn data.sort(this.sortByLabel);\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\treturn state.map(p => ({\n\t\t\t\t\t\tid: p.name,\n\t\t\t\t\t\tlabel: p.name + (p.paid ? ' (paid)' : ' (free)')\n\t\t\t\t\t}));\n\t\t\t\tcase 'year':\n\t\t\t\t\tlet thisYear = new Date().getFullYear();\n\t\t\t\t\tlet years = Array.from({length: 100}, (x,i) => this.e(String(thisYear - i)));\n\t\t\t\t\t// Add custom years to select box\n\t\t\t\t\tif (typeof this.value === 'string' && this.value.length > 0 && years.findIndex(y => y.id === this.value) === -1) {\n\t\t\t\t\t\tvar customYear = this.e(this.value);\n\t\t\t\t\t\tif (this.value > thisYear) {\n\t\t\t\t\t\t\tyears.unshift(customYear);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tyears.push(this.e(this.value));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn years;\n\t\t\t\tcase 'band-name':\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\treturn state.map(val => this.e(val));\n\t\t\t\tdefault:\n\t\t\t\t\tif (Utils.isObject(this.schema) && this.schema.isEnum()) {\n\t\t\t\t\t\treturn this.schema.getEnumChoices().map(val => this.e(val));\n\t\t\t\t\t}\n\t\t\t\t\telse if (Array.isArray(this.options)) {\n\t\t\t\t\t\treturn this.options.map(val => {\n\t\t\t\t\t\t\tif (Utils.isObject(val)) {\n\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn this.e(val)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowDetails() {\n\t\t\treturn (this.type === 'collection-id');\n\t\t},\n\t\tdeselectLabel() {\n\t\t\treturn this.multiple ? 'Press enter to remove' : '';\n\t\t},\n\t\ttagPlaceholder() {\n\t\t\treturn this.type === 'year' ? 'Press enter to select' : 'Press enter to create a tag';\n\t\t},\n\t\tmultiple() {\n\t\t\treturn (this.type === 'file-paths');\n\t\t},\n\t\ttaggable() {\n\t\t\tlet freeInputIfEmpty = ['band-name', 'collection-id', 'job-id', 'input-format', 'output-format'];\n\t\t\treturn (this.type === 'year' || (this.selectOptions.length === 0 && freeInputIfEmpty.includes(this.type)));\n\t\t},\n\t\tpreselect() {\n\t\t\tif (this.multiple) {\n\t\t\t\treturn (!Array.isArray(this.selected) || this.selected.length === 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (this.selected === null);\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tselected: null,\n\t\t\tloaded: false\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.loadData();\n\t},\n\twatch: {\n\t\ttype() {\n\t\t\tthis.loadData();\n\t\t},\n\t\tselected(newValue) {\n\t\t\tlet value;\n\t\t\tif (newValue === null) {\n\t\t\t\tvalue = null;\n\t\t\t}\n\t\t\telse if (this.multiple) {\n\t\t\t\tif (!Array.isArray(newValue)) {\n\t\t\t\t\tnewValue = [newValue];\n\t\t\t\t}\n\t\t\t\tvalue = newValue.map(v => v.id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'epsg-code':\n\t\t\t\t\t\tvar num = Number.parseInt(newValue.id);\n\t\t\t\t\t\tvalue = Number.isNaN(num) ? null : num;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\t\tvalue = newValue.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tvalue = String(newValue.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = newValue.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$emit('input', value);\n\t\t},\n\t\tcontext() {\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.preselectFirst();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.loadData();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\t...Utils.mapActions(['describeCollection']),\n\t\t...Utils.mapActions('editor', ['loadEpsgCodes']),\n\t\t// Convert a value to a option object for MultiSelect\n\t\te(val) {\n\t\t\treturn {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t},\n\t\tasync loadData() {\n\t\t\tthis.loaded = false;\n\t\t\tif (this.type === 'epsg-code' || this.type === 'crs') {\n\t\t\t\tawait this.loadEpsgCodes();\n\t\t\t}\n\t\t\telse if (this.type === 'band-name') {\n\t\t\t\tawait this.describeCollection(this.context);\n\t\t\t}\n\t\t\tthis.initSelection();\n\t\t\tthis.loaded = true;\n\t\t},\n\t\tasync preselectFirst() {\n\t\t\tawait this.$nextTick();\n\t\t\t// Preselect first element if nothing else is set.\n\t\t\tlet elem = this.$refs.htmlElement;\n\t\t\t// Code inspired from mounted() method in vue-multiselect's multiselectMixin.js\n\t\t\tif (elem.preselectFirst && Array.isArray(elem.filteredOptions) && elem.filteredOptions.length) {\n\t\t\t\telem.select(elem.filteredOptions[0]);\n\t\t\t}\n\t\t},\n\t\tinitSelection() {\n\t\t\tlet value = typeof this.value === 'undefined' ? this.schema.default() : this.value;\n\t\t\tif (this.multiple && Array.isArray(value)) {\n\t\t\t\tthis.selected = this.selectOptions.filter(o => value.includes(o.id));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'input-format':\n\t\t\t\t\tcase 'output-format':\n\t\t\t\t\tcase 'service-type':\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tvalue = value.toUpperCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet selectedOption = this.selectOptions.find(o => o.id === value);\n\t\t\t\tif (selectedOption !== undefined) {\n\t\t\t\t\tthis.selected = selectedOption;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsortByLabel(a,b) {\n\t\t\treturn Utils.compareStringCaseInsensitive(a.label, b.label);\n\t\t},\n\t\taddValue(value) {\n\t\t\tthis.selected = this.e(value);\n\t\t}\n\t}\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style lang=\"scss\">\n@import '../../../theme.scss';\n\n.select-container {\n\tdisplay: flex;\n\tflex-grow: 1;\n\n\t> div {\n\t\tflex-grow: 1;\n\t}\n\n\t> button {\n\t\tmargin-left: 10px;\n\t}\n\n\t.multiselect__option--selected.multiselect__option--highlight {\n\t\tbackground: $mainColor;\n\t}\n\t.multiselect__option--highlight, .multiselect__option--highlight:after {\n\t\tbackground: $mainColor;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SelectBox.vue?vue&type=template&id=9fa5f926\"\nimport script from \"./SelectBox.vue?vue&type=script&lang=js\"\nexport * from \"./SelectBox.vue?vue&type=script&lang=js\"\nimport style0 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=0&prod&lang=css&external\"\nimport style1 from \"./SelectBox.vue?vue&type=style&index=1&id=9fa5f926&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Utils from '../../utils';\nexport const API_TYPES = Utils.resolveJsonRefs(require('@openeo/js-processgraphs/assets/subtype-schemas.json')).definitions;\nexport const NATIVE_TYPES = [\n\t'string',\n\t'integer',\n\t'number',\n\t'boolean',\n\t'array',\n\t'object'\n];"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","options","value","on","setCrs","staticRenderFns","name","components","SelectBox","props","type","String","default","Array","methods","crs","$emit","component","loaded","key","ref","multiple","selectOptions","preselect","editable","deselectLabel","taggable","tagPlaceholder","openDirection","addValue","model","selected","callback","$$v","expression","showDetails","$event","_e","MultiSelect","Boolean","Object","schema","context","optionFilter","Function","computed","state","collection","$store","collections","find","c","id","Utils","isObject","summaries","map","band","error","length","bandDimension","values","d","isArray","jobs","files","editor","epsgCodes","fileFormats","getInputTypes","t","require","types","native","NATIVE_TYPES","assign","API_TYPES","getOutputTypes","serviceTypes","connection","capabilities","listPlans","keys","udfRuntimes","versions","fromEntries","entries","filter","data","e","sort","sortByLabel","label","replace","epsg","match","code","Number","parseInt","ogc","push","j","getResourceTitle","title","prettifyString","f","path","a","b","sortByPath","toUpperCase","p","paid","thisYear","Date","getFullYear","years","from","x","i","findIndex","y","customYear","unshift","val","isEnum","getEnumChoices","freeInputIfEmpty","includes","created","loadData","watch","newValue","v","num","isNaN","preselectFirst","mapActions","loadEpsgCodes","describeCollection","initSelection","$nextTick","elem","$refs","htmlElement","filteredOptions","select","o","selectedOption","undefined","compareStringCaseInsensitive","resolveJsonRefs","definitions"],"sourceRoot":""}